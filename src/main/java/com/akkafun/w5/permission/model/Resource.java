package com.akkafun.w5.permission.model;

// Generated 2013-3-12 9:17:45 by Hibernate Tools 3.6.0

import java.util.HashMap;
import java.util.HashSet;
import java.util.Map;
import java.util.Set;

import org.apache.commons.lang3.builder.CompareToBuilder;
import org.apache.commons.lang3.builder.EqualsBuilder;
import org.apache.commons.lang3.builder.HashCodeBuilder;
import org.apache.commons.lang3.builder.ToStringBuilder;

/**
 * Resource generated by hbm2java
 */
public class Resource implements java.io.Serializable,
		com.akkafun.platform.common.dao.Entity<Long>, Comparable<Resource>, Cloneable  {

	/**
	 * 
	 */
	private static final long serialVersionUID = 1L;

	private Long id;
	private String name;
	private String url;
	private Boolean userDefinedable = false;
	private String uniqueKey;
	private Boolean shareable = false;
	private Boolean systemInit = false;
	private Set<Operation> operations = new HashSet<Operation>(0);

	public String getName() {
		return this.name;
	}

	public void setName(String name) {
		this.name = name;
	}

	public String getUrl() {
		return this.url;
	}

	public void setUrl(String url) {
		this.url = url;
	}

	public Boolean getUserDefinedable() {
		return this.userDefinedable;
	}

	public void setUserDefinedable(Boolean userDefinedable) {
		this.userDefinedable = userDefinedable;
	}

	public String getUniqueKey() {
		return this.uniqueKey;
	}

	public void setUniqueKey(String uniqueKey) {
		this.uniqueKey = uniqueKey;
	}

	public Boolean getShareable() {
		return this.shareable;
	}

	public void setShareable(Boolean shareable) {
		this.shareable = shareable;
	}

	public Boolean getSystemInit() {
		return this.systemInit;
	}

	public void setSystemInit(Boolean systemInit) {
		this.systemInit = systemInit;
	}

	public Set<Operation> getOperations() {
		return this.operations;
	}

	public void setOperations(Set<Operation> operations) {
		this.operations = operations;
	}

	public Long getId() {
		return id;
	}

	public void setId(Long id) {
		this.id = id;
	}

	@Override
	public Object clone() {
		Resource resource = new Resource();
		resource.setId(id);
		resource.setName(name);
		resource.setUrl(url);
		resource.setUniqueKey(uniqueKey);
		resource.setShareable(shareable);
		resource.setSystemInit(systemInit);
		resource.setUserDefinedable(userDefinedable);
		return resource;
	}

	@Override
	public int compareTo(Resource myClass) {
		return new CompareToBuilder().append(this.url,myClass.url)
				.append(this.operations, myClass.operations).append(this.name,
						myClass.name).append(this.id, myClass.id)
				.toComparison();
	}

	@Override
	public boolean equals(Object object) {
		if (!(object instanceof Resource)) {
			return false;
		}
		Resource rhs = (Resource) object;
		return new EqualsBuilder().appendSuper(super.equals(object)).append(this.url, rhs.url)
				.append(this.operations, rhs.operations).append(this.name, rhs.name)
				.append(this.id, rhs.id).isEquals();
	}

	@Override
	public int hashCode() {
		return new HashCodeBuilder(-854103471, 165885785).appendSuper(
				super.hashCode()).append(this.url).append(this.operations).append(this.name)
				.append(this.id).toHashCode();
	}

	@Override
	public String toString() {
		return new ToStringBuilder(this).append("name", this.name).append("id", this.id).append(
						"operations", this.operations).append("url", this.url).toString();
	}
	
	/**
	 * 获取操作map
	 * @return
	 */
	public Map<String, Operation> getOperationMap() {
		Map<String, Operation> operationMap = new HashMap<String, Operation>();
		if(operations != null && operations.size() > 0) {
			for(Operation o: operations) {
				if(!("/save.do".equals(o.getUrl()) || "/delete.do".equals(o.getUrl()) || "/update.do".equals(o.getUrl()) || "/search.do".equals(o.getUrl()))) {
					operationMap.put(o.getUrl(), o);
				}
			}
			return operationMap;
		}
		return null;
	}
}
